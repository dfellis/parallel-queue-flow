// parallel-queue-flow Copyright (C) 2012 by David Ellis
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.
// The `parallel-queue-flow` constructor constructor function function :)
function parallel(e){function t(n){this.qType=t;var r={},i=[],s=undefined,o=[];this.on=function(t,n){return r[t]=r[t]instanceof Array?r[t]:[],r[t].push(n),this},this.fire=function(n){var i=Array.prototype.slice.call(arguments,1,arguments.length-1),s=arguments[arguments.length-1]instanceof Function?arguments[arguments.length-1]:function(){};if(!r)s(!1);else if(r[n]){var o=r[n].length,u=0,a=!0;r[n].forEach(function(e,n){if(!n instanceof Function)return u++;if(t.q.isAsync(n,e.length+1))e.push(function(e){e===!1&&(a=e),u++,o==u&&s(a)}),n.apply(this,e);else{var r=n.apply(this,e);r===!1&&(a=r),u++,o==u&&s(a)}}.bind(this,i))}else s(!0)}.bind(this),this.clear=function(t){r[t]=[]},this.setHandler=function(t){return s=t,i&&i.length>0&&this.push(),this};var u=function(t,n){t.done=n;var r=o[0];while(!!r&&r.done instanceof Function)r.done(),o.shift(),r=o[0];o.length==0&&i.length==0?this.fire("empty"):this.push()}.bind(this),a=function(){var n=e-o.length>i.length?i.length:e-o.length;for(var r=0;r<n;r++){var a=i[0];this.fire("pull",a,function(e){if(e){var t={done:!1};o.push(t),process.nextTick(s.bind(this,i.shift(),u.bind(this,t)))}}.bind(this))}}.bind(this);return this.push=function(){var n=Array.prototype.slice.call(arguments,0);return this.fire("push",n,function(t){if(t===!1)return;!!s&&o.length<e?(i.push.apply(i,n),a()):i.push.apply(i,n)}.bind(this)),this},this.close=function(){return this.fire("close",function(e){if(e){this.clear("push"),this.on("push",function(){return!1});var t=function(){var e=s;s=undefined,r=undefined,i=undefined,this.namedQueues&&Object.keys(this.namedQueues).forEach(function(e){this.namedQueues[e]===this&&delete this.namedQueues[e]}.bind(this)),delete this,e instanceof Function&&process.nextTick(e.bind(null,"close"))}.bind(this);i&&!i.length&&process.nextTick(t.bind(this)),i&&i.length&&(this.clear("empty"),this.on("empty",t.bind(this)))}}.bind(this)),this}.bind(this),this.kill=function(){this.fire("kill");var t=s;s=undefined,r={},i=undefined,this.namedQueues&&Object.keys(this.namedQueues).forEach(function(e){this.namedQueues[e]===this&&delete this.namedQueues[e]}.bind(this)),delete this,t instanceof Function&&t("kill")},n instanceof Array&&(this.push.apply(this,n),i.length>0&&this.on("empty",this.close.bind(this))),this}e||(e=Infinity);if(module&&module.exports){var n=global.q&&!!n?n:require("queue-flow");t.prototype=n.Q.prototype,t.q=n}else t.prototype=n.Q.prototype,t.q=n;return t}module&&module.exports&&(module.exports=parallel);